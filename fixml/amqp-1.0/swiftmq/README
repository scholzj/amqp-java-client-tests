PREREQUSITITES:

1) Download swift mq jar files and add them to local repository

 a) Download client libraries from http://www.swiftmq.com/downloads/index.html

 b) Put files amqp.jar and swiftmq.jar to project reoot directory (where file pom.xml is located)

2) Add amqp.jar and swiftmq.jar files to local repository by executing commands below

 a) mvn install:install-file -DlocalRepositoryPath=repo-local -DcreateChecksum=true -Dpackaging=jar -Dfile=swiftmq.jar -DgroupId=com -DartifactId=swiftmq -Dversion=1.0

 b) mvn install:install-file -DlocalRepositoryPath=repo-local -DcreateChecksum=true -Dpackaging=jar -Dfile=amqp.jar -DgroupId=com.swiftmq -DartifactId=amqp -Dversion=1.0

3) Delete amqp.jar and swiftmq.jar from project root directory

HOW TO EXECUTE EXAMPLES:

1) Edit creating of connection and consumer/producer to suit your needs in files BroadcastReceiver.java and RequestResponse.java.

  a) How to change connection string and queue names is described in documentation.

2) Configure certificates to maintain secure connection to broker

  a) Set passwords to trust store and key store in BroadcastReceiver.java, RequestResponse.java files (default password is '123456')

  b) Set full path to trust store and key store in BroadcastReceiver.java, RequestResponse.java files (default values 'truststore' and 'ABCFR_ABCFRALMMACC1.keystore' will NOT work)

3) Compile and execute - there are two ways how to execute example

 a) Execute commands 'mvn compile' and 'mvn exec:java -Dexec.mainClass="BroadcastReceiver"' for broadcast receiver example.
    Execute commands 'mvn compile' and 'mvn exec:java -Dexec.mainClass="RequestResponse"' for request response example.

 b) Execute commands 'mvn package' and 'java -jar target/fixml-broadcast-receiver.jar' for broadcast receiver example.
    Execute commands 'mvn package' and 'java -jar target/fixml-request-response.jar' for response receiver example.

4) Stop example

 a) Any running example can be stopped by pressing Ctrl + C
